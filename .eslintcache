[{"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\App.js":"2","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\Movies.js":"4","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\Nav1.js":"5","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\Search.js":"6","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\aboutUs.js":"7","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\profileCards.js":"8","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\MovieList.js":"9","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\Movie.js":"10"},{"size":472,"mtime":1607153257110,"results":"11","hashOfConfig":"12"},{"size":5854,"mtime":1607176721176,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1607150066518,"results":"14","hashOfConfig":"12"},{"size":480,"mtime":1607171645457,"results":"15","hashOfConfig":"12"},{"size":489,"mtime":1607172839395,"results":"16","hashOfConfig":"12"},{"size":1085,"mtime":1607180213135,"results":"17","hashOfConfig":"12"},{"size":1876,"mtime":1607172652633,"results":"18","hashOfConfig":"12"},{"size":1372,"mtime":1607171895002,"results":"19","hashOfConfig":"12"},{"size":480,"mtime":1607179661519,"results":"20","hashOfConfig":"12"},{"size":772,"mtime":1607178353639,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1utaih5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\index.js",[],["46","47"],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\App.js",["48","49"],"import './App.css';\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport { \r\n  createMuiTheme, ThemeProvider, IconButton, Typography, Divider, \r\n  Toolbar, List, ListItem, ListItemIcon, ListItemText, Drawer, AppBar\r\n} from '@material-ui/core';\r\n\r\n//import MoviesPage from './pages/Movies.js';\r\nimport DataSearch from './pages/Search.js';\r\nimport AboutUs from './pages/aboutUs.js';\r\n\r\n\r\nfunction App(){\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  var drawerStats = false;\r\n\r\n  const handleDrawer =()=> {\r\n    drawerStats = !drawerStats;\r\n    setOpen(drawerStats);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={font}> \r\n        <Typography variant=\"h3\">Movie DB</Typography>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawer} edge=\"start\" >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" noWrap>Movie DB</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer variant=\"permanent\" className={clsx(classes.drawer, { [classes.drawerOpen]: open,[classes.drawerClose]: !open,})}\r\n            classes={{paper: clsx({[classes.drawerOpen]: open,[classes.drawerClose]: !open,})}}>\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n              <List>\r\n                {/* <NavLink to=\"/\"> */}\r\n                  <ListItem button key=\"Home\">\r\n                    <ListItemIcon>{<PersonIcon />}</ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                  </ListItem>\r\n                {/* </NavLink>   */}\r\n              </List>\r\n              <Divider />\r\n              <List>\r\n                {/* <NavLink to=\"/movies\"> */}\r\n                  <ListItem button key=\"Movies\">\r\n                      <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n                      <ListItemText primary=\"Movies\" />\r\n                  </ListItem>\r\n                {/* {</NavLink>} */}\r\n                {/* {<NavLink to=\"/tvshows\">} */}\r\n                  <ListItem button key=\"TV Shows\">\r\n                      <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n                      <ListItemText primary=\"TV Shows\" />\r\n                  </ListItem>\r\n                {/* {</NavLink>} */}\r\n                {/* {<NavLink to=\"/peoples\">} */}\r\n                  <ListItem button key=\"Peoples\">\r\n                      <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n                      <ListItemText primary=\"Peoples\" />\r\n                  </ListItem>\r\n                {/* {</NavLink>} */}\r\n              </List>\r\n              <Divider />\r\n              <List>\r\n                {/* <NavLink to=\"/aboutus\"> */}\r\n                  <ListItem button key=\"About Us\">\r\n                    <ListItemIcon>{<PersonIcon />}</ListItemIcon>\r\n                    <ListItemText primary=\"About Us\" />\r\n                  </ListItem>\r\n                {/* </NavLink> */}\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n          \r\n          <main className={classes.content}>\r\n          {/* <main> tempat taruh elemen-elemen */}\r\n            {/* <MoviesPage/><br/> */}\r\n            <DataSearch/>\r\n            <br/>\r\n            \r\n            \r\n          </main>\r\n        </div>\r\n        {/* <Route exact path='/' component={App}/> \r\n        <Route path='/aboutus' component={AboutUs}/> */}\r\n        {/*<Route path='/movies' component={}/> \r\n        <Route path='/tvshows' component={}/>\r\n        <Route path='/peoples' component={}/>*/}\r\n        \r\n      </ThemeProvider>\r\n    </Router>\r\n  ); \r\n}\r\n\r\nconst font = createMuiTheme({\r\n  typography:{\r\n    fontFamily: [\r\n      'Work Sans', \r\n      'Rubik',\r\n      'sans-serif'\r\n    ],\r\n  }\r\n});\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\Movies.js",[],["50","51"],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\Nav1.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\Search.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\pages\\aboutUs.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\profileCards.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\MovieList.js",[],"C:\\Users\\ASUS\\Documents\\GitHub\\MOVIE-DB\\src\\components\\Movie.js",["52","53"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst Movie = (props) =>{\r\n    return(\r\n        <div>\r\n            <Card>\r\n                <div>\r\n                    {\r\n                        props.image == null ? <img src={`https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.askc.us%2Fhome%2Fdefault-image%2F&psig=AOvVaw14AdZSFv2RER1asrNKp34z&ust=1607264149626000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLDtotiDt-0CFQAAAAAdAAAAABAT`}\r\n                        style={{width: \"100%\", height : 360}}/> : <img src={`http://image.tmdb.org/t/p/w185${props.image}`}\r\n                        style={{width: \"100%\", height : 360}}/>\r\n                    }\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":34,"nodeType":"60","messageId":"61","endLine":9,"endColumn":39},{"ruleId":"58","severity":1,"message":"62","line":18,"column":8,"nodeType":"60","messageId":"61","endLine":18,"endColumn":15},{"ruleId":"54","replacedBy":"63"},{"ruleId":"56","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":10,"column":47,"nodeType":"67","endLine":11,"endColumn":64},{"ruleId":"65","severity":1,"message":"66","line":11,"column":67,"nodeType":"67","endLine":12,"endColumn":64},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'AboutUs' is defined but never used.",["68"],["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]